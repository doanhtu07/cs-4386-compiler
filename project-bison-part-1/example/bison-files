/*******************  BISON FiLE    ex3.y  ***************************/

%{
#include <stdio.h>
int yylex(void);
int yyerror(char *);
%}

// Symbols.
%union
{
        char    *sval;
};
%token <sval> IDENTIFIER
%token PROCEDURE
%token BLOCK
%token ENDBLOCK

%start Procedure
%%

Procedure:
        PROCEDURE IDENTIFIER BLOCK { printf("Procedure : %s\n", $2); }
        Parts
        ENDBLOCK
        ;

Parts:
        /* empty */
        | Parts Part
        ;

Part:
        IDENTIFIER BLOCK { printf("\tPart : %s\n", $1);  }
                Keywords
        ENDBLOCK
        ;

Keywords:
        /* empty */
        | Keywords Keyword
        ;
Keyword:
        IDENTIFIER {  printf("\t\tKeyword : %s\n", $1);  }
        ;
%%
int yyerror(char *s) {
  printf("yyerror : %s\n",s);
}
int main(void) {
  yyparse();
   printf("SUCCESS\n");
}
int yywrap() {
}





/**********************  flext file ex3.l  ***************************/
%{
#include "ex3.tab.h"
%}

blanks          [ \t\n]+
identifier		[_a-zA-Z0-9]+

%%

{blanks}        { /* ignore */ }

"procedure"		return(PROCEDURE); 
"{"				return(BLOCK);
"}"				return(ENDBLOCK);

{identifier}	{
				yylval.sval = malloc(strlen(yytext));
				strncpy(yylval.sval, yytext, strlen(yytext));
				return(IDENTIFIER);
}




/***************  example to run ex3.txt   ********************/
procedure Validate  {
        begin {
                DoThis ,
                Dothat
        }
        end {
                CleanUp
        }
}
